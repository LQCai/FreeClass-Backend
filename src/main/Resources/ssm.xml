<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        ">
    <!--配置Handler，也就是控制器，使用组件扫描-->
    <context:component-scan base-package="cn.starchild"/>
    <!--使用mvc:annotation-driven会加载很多的参数绑定方法 包括JSON解析-->
    <mvc:annotation-driven/>

    <!--注解映射器和适配器必须配对使用-->
    <!--视图解析器
        解析jsp解析，默认使用jstl标签，classpath下的所有jstl包
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"/>
    <!--引入配置文件-->
    <context:property-placeholder location="classpath*:jdbc_mysql.properties"/>
    <!--配置mysql-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:/cn/starchild/*/dao/mapper/*.xml"/>
    </bean>

    <!--&lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="basePackage" value="cn.starchild.*.dao.*" />-->
    <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!-- 通用 Mapper -->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.starchild.*.dao"/>
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    &lt;!&ndash; 配置校验器 &ndash;&gt;-->
    <!--    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
    <!--        &lt;!&ndash; 校验器，使用hibernate校验器 &ndash;&gt;-->
    <!--        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
    <!--        &lt;!&ndash; 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下面的ValidationMessages.properties文件 &ndash;&gt;-->
    <!--        <property name="validationMessageSource" ref="messageSource"/>-->
    <!--    </bean>-->
    <!--    &lt;!&ndash; 校验错误信息配置文件 &ndash;&gt;-->
    <!--    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
    <!--        &lt;!&ndash; 资源文件名 &ndash;&gt;-->
    <!--        <property name="basenames">-->
    <!--            <list>-->
    <!--                <value>classpath:validator.wechat</value>-->
    <!--                <value>classpath:validator.account</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        &lt;!&ndash; 资源文件编码格式 &ndash;&gt;-->
    <!--        <property name="fileEncodings" value="utf-8"/>-->
    <!--        &lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;-->
    <!--        <property name="cacheSeconds" value="120"/>-->
    <!--    </bean>-->

    <!--    &lt;!&ndash; 自定义webBinder &ndash;&gt;-->
    <!--    <bean id="customBinder"-->
    <!--          class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">-->
    <!--        &lt;!&ndash; 配置validator &ndash;&gt;-->
    <!--        <property name="validator" ref="validator"/>-->
    <!--    </bean>-->
    <!--    &lt;!&ndash; 注解适配器 &ndash;&gt;-->
    <!--    <bean-->
    <!--            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--        &lt;!&ndash; 在webBindingInitializer中注入自定义属性编辑器、自定义转换器 &ndash;&gt;-->
    <!--        <property name="webBindingInitializer" ref="customBinder"></property>-->
    <!--    </bean>-->
</beans>