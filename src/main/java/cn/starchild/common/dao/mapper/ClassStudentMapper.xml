<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.starchild.common.dao.ClassStudentDao">
    <resultMap id="BaseResultMap" type="cn.starchild.common.model.ClassStudentModel">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="class_id" jdbcType="CHAR" property="classId"/>
        <result column="student_id" jdbcType="CHAR" property="studentId"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="modified" jdbcType="TIMESTAMP" property="modified"/>
    </resultMap>

    <resultMap id="UserResultMap" type="cn.starchild.common.model.UserModel">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="serial_code" jdbcType="CHAR" property="serialCode"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, class_id, student_id, status, created, modified
    </sql>
    <insert id="joinClass" parameterType="ClassStudent">
        insert into t_class_student (id, class_id, student_id,
                                     status, created, modified)
        values (#{id,jdbcType=CHAR}, #{classId,jdbcType=CHAR}, #{studentId,jdbcType=CHAR}, #{status,jdbcType=BIT},
                #{created,jdbcType=TIMESTAMP},
                #{modified,jdbcType=TIMESTAMP})
    </insert>
    <update id="deleteByClassId" parameterType="string">
        update t_class_student
        set status=2
        where class_id = #{classId}
    </update>
    <update id="deleteForClassAndStudent" parameterType="ClassStudent">
        update t_class_student
        set status = 2
        where class_id = #{classId}
          and student_id = #{studentId}
    </update>

    <select id="selectSimpleList" resultType="java.util.Map" parameterType="string">
        select cs.id,
               c.id class_id
        from t_class c
                 join t_class_student cs
                      on c.id = cs.class_id
        where c.teacher_id = #{id}
          and cs.status != 2
          and c.status != 2
    </select>
    <select id="validateJoined" resultType="java.util.Map" parameterType="ClassStudent">
        select id
        from t_class_student
        where class_id = #{classId}
          and student_id = #{studentId}
          and status != 2
    </select>
    <select id="selectStudentList" resultType="java.util.Map" parameterType="string">
        select u.id,
               u.name,
               u.serial_code,
               u.open_id
        from t_user u
                 join t_class_student cs on u.id = cs.student_id
        where cs.class_id = #{classId}
          and cs.status != 2
          and u.status != 2
        order by u.serial_code asc
    </select>
    <select id="getStudentInfo" resultMap="UserResultMap" parameterType="ClassStudent">
        select u.id,
               u.name,
               u.serial_code
        from t_user u
                 join t_class_student cs on cs.student_id = u.id
        where u.id = #{studentId}
          and cs.class_id = #{classId}
          and u.status != 2
          and cs.status != 2
    </select>

</mapper>