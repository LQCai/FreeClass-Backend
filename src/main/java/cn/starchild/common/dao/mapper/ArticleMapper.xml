<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.starchild.common.dao.ArticleDao">
    <resultMap id="BaseResultMap" type="cn.starchild.common.model.ArticleModel">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="user_id" jdbcType="CHAR" property="userId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="modified" jdbcType="TIMESTAMP" property="modified"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.starchild.common.model.ArticleModel">
        <result column="image_url_array" jdbcType="LONGVARCHAR" property="imageUrlArray"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, content, status, created, modified
    </sql>
    <sql id="Blob_Column_List">
        image_url_array
    </sql>
    <select id="getArticleList" resultType="java.util.Map" parameterType="int">
        select a.id,
               a.content,
               a.image_url_array,
               a.created,
               count(ac.id)   article_collection_count,
               count(acom.id) article_comment_count
        from t_article a
                 left join t_article_collection ac on a.id = ac.article_id
                 left join t_article_comment acom on a.id = acom.article_id
        where a.status != 2
        order by a.created desc
        limit #{index},10
    </select>
    <select id="selectArticleById" resultType="cn.starchild.common.model.ArticleModel" parameterType="string">
        select id
        from t_article
        where status != 2
    </select>
    <select id="selectArticleDetail" resultType="java.util.Map" parameterType="string">
        select a.id,
               a.content,
               a.image_url_array,
               a.created,
               count(ac.id)   article_collection_count,
               count(acom.id) article_comment_count
        from t_article a
                 left join t_article_collection ac on a.id = ac.article_id
                 left join t_article_comment acom on a.id = acom.article_id
        where a.id = #{articleId}
    </select>
</mapper>